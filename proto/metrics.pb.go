// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0--rc1
// source: proto/metrics.proto

package proto

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Metric_Type int32

const (
	Metric_Unspecified Metric_Type = 0
	Metric_Gauge       Metric_Type = 1
	Metric_Counter     Metric_Type = 2
)

// Enum value maps for Metric_Type.
var (
	Metric_Type_name = map[int32]string{
		0: "Unspecified",
		1: "Gauge",
		2: "Counter",
	}
	Metric_Type_value = map[string]int32{
		"Unspecified": 0,
		"Gauge":       1,
		"Counter":     2,
	}
)

func (x Metric_Type) Enum() *Metric_Type {
	p := new(Metric_Type)
	*p = x
	return p
}

func (x Metric_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Metric_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_metrics_proto_enumTypes[0].Descriptor()
}

func (Metric_Type) Type() protoreflect.EnumType {
	return &file_proto_metrics_proto_enumTypes[0]
}

func (x Metric_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Metric_Type.Descriptor instead.
func (Metric_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_metrics_proto_rawDescGZIP(), []int{0, 0}
}

type Metric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          Metric_Type            `protobuf:"varint,2,opt,name=type,proto3,enum=metrics.Metric_Type" json:"type,omitempty"`
	Value         float64                `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	Delta         int64                  `protobuf:"varint,4,opt,name=delta,proto3" json:"delta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metric) Reset() {
	*x = Metric{}
	mi := &file_proto_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_proto_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *Metric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metric) GetType() Metric_Type {
	if x != nil {
		return x.Type
	}
	return Metric_Unspecified
}

func (x *Metric) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Metric) GetDelta() int64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

type MetricList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       []*Metric              `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricList) Reset() {
	*x = MetricList{}
	mi := &file_proto_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricList) ProtoMessage() {}

func (x *MetricList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricList.ProtoReflect.Descriptor instead.
func (*MetricList) Descriptor() ([]byte, []int) {
	return file_proto_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *MetricList) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type BatchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*BatchRequest_MetricList
	//	*BatchRequest_EncryptedPayload
	Payload       isBatchRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRequest) Reset() {
	*x = BatchRequest{}
	mi := &file_proto_metrics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRequest) ProtoMessage() {}

func (x *BatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRequest.ProtoReflect.Descriptor instead.
func (*BatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *BatchRequest) GetPayload() isBatchRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *BatchRequest) GetMetricList() *MetricList {
	if x != nil {
		if x, ok := x.Payload.(*BatchRequest_MetricList); ok {
			return x.MetricList
		}
	}
	return nil
}

func (x *BatchRequest) GetEncryptedPayload() []byte {
	if x != nil {
		if x, ok := x.Payload.(*BatchRequest_EncryptedPayload); ok {
			return x.EncryptedPayload
		}
	}
	return nil
}

type isBatchRequest_Payload interface {
	isBatchRequest_Payload()
}

type BatchRequest_MetricList struct {
	MetricList *MetricList `protobuf:"bytes,1,opt,name=metric_list,json=metricList,proto3,oneof"`
}

type BatchRequest_EncryptedPayload struct {
	EncryptedPayload []byte `protobuf:"bytes,2,opt,name=encrypted_payload,json=encryptedPayload,proto3,oneof"`
}

func (*BatchRequest_MetricList) isBatchRequest_Payload() {}

func (*BatchRequest_EncryptedPayload) isBatchRequest_Payload() {}

type BatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchResponse) Reset() {
	*x = BatchResponse{}
	mi := &file_proto_metrics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResponse) ProtoMessage() {}

func (x *BatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResponse.ProtoReflect.Descriptor instead.
func (*BatchResponse) Descriptor() ([]byte, []int) {
	return file_proto_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *BatchResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_proto_metrics_proto protoreflect.FileDescriptor

const file_proto_metrics_proto_rawDesc = "" +
	"\n" +
	"\x13proto/metrics.proto\x12\ametrics\"\xa3\x01\n" +
	"\x06Metric\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12(\n" +
	"\x04type\x18\x02 \x01(\x0e2\x14.metrics.Metric.TypeR\x04type\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x01R\x05value\x12\x14\n" +
	"\x05delta\x18\x04 \x01(\x03R\x05delta\"/\n" +
	"\x04Type\x12\x0f\n" +
	"\vUnspecified\x10\x00\x12\t\n" +
	"\x05Gauge\x10\x01\x12\v\n" +
	"\aCounter\x10\x02\"7\n" +
	"\n" +
	"MetricList\x12)\n" +
	"\ametrics\x18\x01 \x03(\v2\x0f.metrics.MetricR\ametrics\"\x80\x01\n" +
	"\fBatchRequest\x126\n" +
	"\vmetric_list\x18\x01 \x01(\v2\x13.metrics.MetricListH\x00R\n" +
	"metricList\x12-\n" +
	"\x11encrypted_payload\x18\x02 \x01(\fH\x00R\x10encryptedPayloadB\t\n" +
	"\apayload\"%\n" +
	"\rBatchResponse\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error2A\n" +
	"\aMetrics\x126\n" +
	"\x05Batch\x12\x15.metrics.BatchRequest\x1a\x16.metrics.BatchResponseB$Z\"github.com/talx-hub/malerter/protob\x06proto3"

var (
	file_proto_metrics_proto_rawDescOnce sync.Once
	file_proto_metrics_proto_rawDescData []byte
)

func file_proto_metrics_proto_rawDescGZIP() []byte {
	file_proto_metrics_proto_rawDescOnce.Do(func() {
		file_proto_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_metrics_proto_rawDesc), len(file_proto_metrics_proto_rawDesc)))
	})
	return file_proto_metrics_proto_rawDescData
}

var file_proto_metrics_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_metrics_proto_goTypes = []any{
	(Metric_Type)(0),      // 0: metrics.Metric.Type
	(*Metric)(nil),        // 1: metrics.Metric
	(*MetricList)(nil),    // 2: metrics.MetricList
	(*BatchRequest)(nil),  // 3: metrics.BatchRequest
	(*BatchResponse)(nil), // 4: metrics.BatchResponse
}
var file_proto_metrics_proto_depIdxs = []int32{
	0, // 0: metrics.Metric.type:type_name -> metrics.Metric.Type
	1, // 1: metrics.MetricList.metrics:type_name -> metrics.Metric
	2, // 2: metrics.BatchRequest.metric_list:type_name -> metrics.MetricList
	3, // 3: metrics.Metrics.Batch:input_type -> metrics.BatchRequest
	4, // 4: metrics.Metrics.Batch:output_type -> metrics.BatchResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_metrics_proto_init() }
func file_proto_metrics_proto_init() {
	if File_proto_metrics_proto != nil {
		return
	}
	file_proto_metrics_proto_msgTypes[2].OneofWrappers = []any{
		(*BatchRequest_MetricList)(nil),
		(*BatchRequest_EncryptedPayload)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_metrics_proto_rawDesc), len(file_proto_metrics_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_metrics_proto_goTypes,
		DependencyIndexes: file_proto_metrics_proto_depIdxs,
		EnumInfos:         file_proto_metrics_proto_enumTypes,
		MessageInfos:      file_proto_metrics_proto_msgTypes,
	}.Build()
	File_proto_metrics_proto = out.File
	file_proto_metrics_proto_goTypes = nil
	file_proto_metrics_proto_depIdxs = nil
}
